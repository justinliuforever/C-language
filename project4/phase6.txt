Dump of assembler code for function phase_6:
=> 0x0000555555555dc3 <+0>:	push   %r14
   0x0000555555555dc5 <+2>:	push   %r13
   0x0000555555555dc7 <+4>:	push   %r12
   0x0000555555555dc9 <+6>:	push   %rbp
   0x0000555555555dca <+7>:	push   %rbx
   0x0000555555555dcb <+8>:	sub    $0x60,%rsp
   0x0000555555555dcf <+12>:	mov    %fs:0x28,%rax
   0x0000555555555dd8 <+21>:	mov    %rax,0x58(%rsp)
   0x0000555555555ddd <+26>:	xor    %eax,%eax
   0x0000555555555ddf <+28>:	mov    %rsp,%r13
   0x0000555555555de2 <+31>:	mov    %r13,%rsi
   0x0000555555555de5 <+34>:	callq  0x55555555637f <read_six_numbers>
   0x0000555555555dea <+39>:	mov    %r13,%r12
   0x0000555555555ded <+42>:	mov    $0x0,%r14d
   0x0000555555555df3 <+48>:	jmp    0x555555555e1a <phase_6+87>
   0x0000555555555df5 <+50>:	callq  0x555555556343 <explode_bomb>
   0x0000555555555dfa <+55>:	jmp    0x555555555e29 <phase_6+102>
   0x0000555555555dfc <+57>:	add    $0x1,%ebx
   0x0000555555555dff <+60>:	cmp    $0x5,%ebx
   0x0000555555555e02 <+63>:	jg     0x555555555e16 <phase_6+83>
   0x0000555555555e04 <+65>:	movslq %ebx,%rax
   0x0000555555555e07 <+68>:	mov    (%rsp,%rax,4),%eax
   0x0000555555555e0a <+71>:	cmp    %eax,0x0(%rbp)
   0x0000555555555e0d <+74>:	jne    0x555555555dfc <phase_6+57>
   0x0000555555555e0f <+76>:	callq  0x555555556343 <explode_bomb>
   0x0000555555555e14 <+81>:	jmp    0x555555555dfc <phase_6+57>
   0x0000555555555e16 <+83>:	add    $0x4,%r13
   0x0000555555555e1a <+87>:	mov    %r13,%rbp
   0x0000555555555e1d <+90>:	mov    0x0(%r13),%eax
   0x0000555555555e21 <+94>:	sub    $0x1,%eax
   0x0000555555555e24 <+97>:	cmp    $0x5,%eax
   0x0000555555555e27 <+100>:	ja     0x555555555df5 <phase_6+50>
   0x0000555555555e29 <+102>:	add    $0x1,%r14d
   0x0000555555555e2d <+106>:	cmp    $0x6,%r14d
   0x0000555555555e31 <+110>:	je     0x555555555e38 <phase_6+117>
   0x0000555555555e33 <+112>:	mov    %r14d,%ebx
   0x0000555555555e36 <+115>:	jmp    0x555555555e04 <phase_6+65>
   0x0000555555555e38 <+117>:	lea    0x18(%r12),%rcx
   0x0000555555555e3d <+122>:	mov    $0x7,%edx
   0x0000555555555e42 <+127>:	mov    %edx,%eax
   0x0000555555555e44 <+129>:	sub    (%r12),%eax
   0x0000555555555e48 <+133>:	mov    %eax,(%r12)
---Type <return> to continue, or q <return> to quit---
   0x0000555555555e4c <+137>:	add    $0x4,%r12
   0x0000555555555e50 <+141>:	cmp    %r12,%rcx
   0x0000555555555e53 <+144>:	jne    0x555555555e42 <phase_6+127>
   0x0000555555555e55 <+146>:	mov    $0x0,%esi
   0x0000555555555e5a <+151>:	jmp    0x555555555e76 <phase_6+179>
   0x0000555555555e5c <+153>:	mov    0x8(%rdx),%rdx
   0x0000555555555e60 <+157>:	add    $0x1,%eax
   0x0000555555555e63 <+160>:	cmp    %ecx,%eax
   0x0000555555555e65 <+162>:	jne    0x555555555e5c <phase_6+153>
   0x0000555555555e67 <+164>:	mov    %rdx,0x20(%rsp,%rsi,8)
   0x0000555555555e6c <+169>:	add    $0x1,%rsi
   0x0000555555555e70 <+173>:	cmp    $0x6,%rsi
   0x0000555555555e74 <+177>:	je     0x555555555e8c <phase_6+201>
   0x0000555555555e76 <+179>:	mov    (%rsp,%rsi,4),%ecx
   0x0000555555555e79 <+182>:	mov    $0x1,%eax
   0x0000555555555e7e <+187>:	lea    0x20339b(%rip),%rdx        # 0x555555759220 <node1>
   0x0000555555555e85 <+194>:	cmp    $0x1,%ecx
   0x0000555555555e88 <+197>:	jg     0x555555555e5c <phase_6+153>
   0x0000555555555e8a <+199>:	jmp    0x555555555e67 <phase_6+164>
   0x0000555555555e8c <+201>:	mov    0x20(%rsp),%rbx
   0x0000555555555e91 <+206>:	mov    0x28(%rsp),%rax
   0x0000555555555e96 <+211>:	mov    %rax,0x8(%rbx)
   0x0000555555555e9a <+215>:	mov    0x30(%rsp),%rdx
   0x0000555555555e9f <+220>:	mov    %rdx,0x8(%rax)
   0x0000555555555ea3 <+224>:	mov    0x38(%rsp),%rax
   0x0000555555555ea8 <+229>:	mov    %rax,0x8(%rdx)
   0x0000555555555eac <+233>:	mov    0x40(%rsp),%rdx
   0x0000555555555eb1 <+238>:	mov    %rdx,0x8(%rax)
   0x0000555555555eb5 <+242>:	mov    0x48(%rsp),%rax
   0x0000555555555eba <+247>:	mov    %rax,0x8(%rdx)
   0x0000555555555ebe <+251>:	movq   $0x0,0x8(%rax)
   0x0000555555555ec6 <+259>:	mov    $0x5,%ebp
   0x0000555555555ecb <+264>:	jmp    0x555555555ed6 <phase_6+275>
   0x0000555555555ecd <+266>:	mov    0x8(%rbx),%rbx
   0x0000555555555ed1 <+270>:	sub    $0x1,%ebp
   0x0000555555555ed4 <+273>:	je     0x555555555ee7 <phase_6+292>
   0x0000555555555ed6 <+275>:	mov    0x8(%rbx),%rax
   0x0000555555555eda <+279>:	mov    (%rax),%eax
   0x0000555555555edc <+281>:	cmp    %eax,(%rbx)
   0x0000555555555ede <+283>:	jge    0x555555555ecd <phase_6+266>
   0x0000555555555ee0 <+285>:	callq  0x555555556343 <explode_bomb>
   0x0000555555555ee5 <+290>:	jmp    0x555555555ecd <phase_6+266>
   0x0000555555555ee7 <+292>:	mov    0x58(%rsp),%rax
---Type <return> to continue, or q <return> to quit---
   0x0000555555555eec <+297>:	xor    %fs:0x28,%rax
   0x0000555555555ef5 <+306>:	jne    0x555555555f04 <phase_6+321>≠≠
   0x0000555555555ef7 <+308>:	add    $0x60,%rsp
   0x0000555555555efb <+312>:	pop    %rbx
   0x0000555555555efc <+313>:	pop    %rbp
   0x0000555555555efd <+314>:	pop    %r12
   0x0000555555555eff <+316>:	pop    %r13
   0x0000555555555f01 <+318>:	pop    %r14
   0x0000555555555f03 <+320>:	retq   
   0x0000555555555f04 <+321>:	callq  0x555555555790 <__stack_chk_fail@plt>
End of assembler dump.
(gdb) 
cd6